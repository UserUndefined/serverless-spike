service: developments

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: eu-west-1
  profile: production
  memorySize: 128
  timeout: 3
  role: arn:aws:iam::391989337674:role/LambdaGenericRole
  cfLogs: true

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  getDevelopments:
    handler: getDevelopments.index
    name: getDevelopments
    description: Return a list of all the developments
    runtime: nodejs4.3
    memorySize: 128
    timeout: 3
    environment:
          DB_NAME: developments
    events:
          - http:
              path: developments
              method: get
              cors: true
              authorizer:
                arn: arn:aws:cognito-idp:eu-west-1:391989337674:userpool/eu-west-1_5MHtkIKtT
    vpc:
          securityGroupIds:
            - sg-9f6c0af9
          subnetIds:
            - subnet-16dd8560
            - subnet-2b78585d
            - subnet-a16d05f9
            - subnet-04a4c75c
            - subnet-e880a68c
            - subnet-07052a63

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
